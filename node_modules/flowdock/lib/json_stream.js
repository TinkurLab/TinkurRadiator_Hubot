// Generated by CoffeeScript 1.8.0
(function() {
  var JSONStream, buffertools, stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  buffertools = require('buffertools');

  stream = require('stream');

  JSONStream = (function(_super) {
    var LF;

    __extends(JSONStream, _super);

    LF = "\r\n";

    function JSONStream() {
      this.buffer = new Buffer(0);
      this.writable = true;
    }

    JSONStream.prototype.write = function(chunk, encoding) {
      var index, input, ret;
      input = Buffer.isBuffer(chunk) && chunk || new Buffer(chunk, encoding);
      this.buffer = buffertools.concat(this.buffer, input);
      while ((index = buffertools.indexOf(this.buffer, LF)) > -1) {
        ret = this.buffer.slice(0, index);
        this.buffer = new Buffer(this.buffer.slice(index + LF.length));
        this.emit('data', JSON.parse(ret.toString('utf8')));
      }
      return true;
    };

    JSONStream.prototype.end = function() {
      this.writable = false;
      return this.emit('end');
    };

    return JSONStream;

  })(stream.Stream);

  module.exports = JSONStream;

}).call(this);
